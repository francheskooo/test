<?php
/**
 * Implementation of filedepot_multiupload module().
 *
 * Main module file.
 */

/**
 * Implements hook_theme_registry_alter().
 */
function filedepot_multiupload_theme_registry_alter(&$theme_registry) {
  $theme_registry['filedepot_main_page']['template'] = drupal_get_path('module', 'filedepot_multiupload') . '/theme/filedepot-mainpage';
  $theme_registry['filedepot_main_page']['theme path'] = drupal_get_path('module', 'filedepot_multiupload');
}

/**
 * Implements hook_menu().
 */
function filedepot_multiupload_menu() {
  $items = array();

  $items['filedepot/%ctools_js/multiupload'] = array(
    'title'          => 'Add multiple files',
    'page callback'  => 'filedepot_multiupload_dialog',
    'page arguments' => array(1),
    'access callback'  => 'user_access',
    'access arguments' => array('access filedepot'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['filedepot/%ctools_js/multiupload_files'] = array(
    'title'          => 'Add multiple files',
    'page callback'  => 'filedepot_multiupload_dialog',
    'page arguments' => array(1),
    'access callback'  => 'user_access',
    'access arguments' => array('access filedepot'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['filedepot_multiupload_ajax'] = array(
    'title'          => 'Filedepot multiupload',
    'page callback'  => 'filedepot_multiupload_dispatcher',
    'page arguments' => array(1),
    'access callback'  => 'user_access',
    'access arguments' => array('access filedepot'),
    'type' => MENU_CALLBACK,
    'file' => 'ajaxserver.php',
  );
  $items['admin/config/media/filedepot/default'] = array(
    'title' => 'Filedepot',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  $items['admin/config/media/filedepot/multiupload'] = array(
    'title' => 'Filedepot Multiupload',
    'description' => 'Configuration for Filedepot Multiupload module',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('filedepot_multiupload_admin_form'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

/**
 * Implements hook_dialog().
 *
 * Shows the dialog for uploading multiple files.
 */
function filedepot_multiupload_dialog($js = NULL) {

  ctools_add_js('common', 'filedepot_multiupload', 'js');
  ctools_include('modal');
  ctools_include('ajax');
  ctools_add_js('ajax-responder');
  drupal_add_css(drupal_get_path('module', 'filedepot') . '/css/filedepot_ctools.css');
  drupal_add_css(drupal_get_path('module', 'filedepot_multiupload') . '/css/common.css', array('weight' => 9));
  $form_state = array(
    'title'            => t('New Files'),
    'ajax'             => TRUE,
    'has_file_element' => TRUE,
  );
  $output = ctools_modal_form_wrapper('filedepot_multiupload_form', $form_state);

  print ajax_render($output);
  exit;
}

/**
 * Implements hook_form().
 *
 * Shows the form for uploading multiple files.
 */
function filedepot_multiupload_form(array $form, array &$form_state) {
  global $user;

  $filedepot = filedepot_filedepot();

  // Using the ctools cache functionality
  // to save which folder the user has selected.
  ctools_include('object-cache');
  $cid = ctools_object_cache_get('filedepot', 'folder');

  module_load_include('php', 'filedepot', 'lib-common');

  if ($filedepot->ogmode_enabled AND $filedepot->checkPermission($filedepot->ogrootfolder, 'admin')) {
    $parent_folders = array($filedepot->ogrootfolder => t('Top Level Folder'));
  }
  elseif (user_access('administer filedepot', $user)) {
    $parent_folders = array(0 => t('Top Level Folder'));
  }
  else {
    $parent_folders = array();
  }
  $parent_folders += filedepot_recursiveAccessArray(array('upload_dir', 'upload'));

  $form['filedepot_parentfolder'] = array(
    '#type'          => 'select',
    '#title'         => t('Parent Folder'),
    '#required'      => FALSE,
    '#options'       => $parent_folders,
    '#default_value' => $cid,
  );

  $default_filter         = 'jpg png doc docx xls xlsx pdf ppt pptx';
  $filter                 = variable_get('filedepot_filetype_filter', $default_filter);

  $form['filedepot_files'] = array(
    '#type' => 'plupload',
    '#title' => t('Upload files'),
    '#description' => t('Add files or drag files and start upload.'),
    '#autoupload' => TRUE,
    '#autosubmit' => TRUE,
    '#upload_validators' => array(
      'file_validate_extensions' => array($filter),
    ),
    '#plupload_settings' => array(
      'runtimes' => 'html5,flash,html4',
      'url' => url('filedepot_multiupload_ajax/upload_files/', array('query' => array('plupload_token' => drupal_get_token('plupload_handle_uploads')))),
    ),
    '#event_callbacks' => array(
      'BeforeUpload' => 'Drupal.filedepot_multiupload.beforeUploadCallback',
      'StateChanged' => 'Drupal.filedepot_multiupload.stateChangedCallback',
      'FilesAdded' => 'Drupal.filedepot_multiupload.filesAddedCallback',
      'UploadComplete' => 'Drupal.filedepot_multiupload.uploadCompleteCallback',
    ),
  );

  $form['buttons'] = array(
    '#prefix' => '<div style="text-align:center;">',
    '#suffix' => '</div>',
  );

  $form['buttons']['close'] = array(
    '#type'   => 'submit',
    '#access' => TRUE,
    '#value'  => t('Close'),
    '#weight' => 60,
    '#submit' => array('filedepot_ctools_form_cancel'),
  );

  $form['buttons']['submit']['#submit'][]   = 'filedepot_multiupload_submit';
  $form['buttons']['submit']['#validate'][] = 'filedepot_multiupload_validate';

  return $form;
}

/**
 * Page callback: Filedepot Multiupload settings
 *
 * @see filedepot_multiupload_menu()
 */
function filedepot_multiupload_admin_form($form, &$form_state) {
  $form['filedepot_multiupload_multibuttonname'] = array(
    '#type' => 'textfield',
    '#title' => t('Display name for Multi-upload button'),
    '#default_value' => variable_get('filedepot_multiupload_multibuttonname', 'Upload multiple'),
    '#description' => t("The user facing name that the multi-upload button gets."),
    '#required' => TRUE,
  );
  $form['filedepot_multiupload_shownewfilebutton'] = array(
    '#type' => 'checkbox',
    '#title' => t('Display Single Upload Button'),
    '#default_value' => variable_get('filedepot_multiupload_shownewfilebutton', TRUE),
    '#description' => t("Whether or not to display the non-multiupload button."),
  );
  return system_settings_form($form);
}
